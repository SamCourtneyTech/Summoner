name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Backend/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'Backend/**'
  workflow_dispatch:

jobs:
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Backend

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test syntax and basic functionality
      run: |
        python -m py_compile main.py
        echo "✅ Backend code validation passed"

  deploy-to-aws:
    name: Deploy to AWS Lambda
    needs: test-backend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: ./Backend

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Create deployment package
      run: |
        mkdir -p deployment-package
        pip install -r requirements.txt -t deployment-package/
        cp *.py deployment-package/
        
        # Clean up unnecessary files to reduce size
        find deployment-package -name "*.pyc" -delete
        find deployment-package -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true

    - name: Deploy to Lambda
      run: |
        cd deployment-package
        zip -r ../lambda-deployment.zip .
        cd ..
        
        aws lambda update-function-code \
          --function-name summoner-aws-backend \
          --zip-file fileb://lambda-deployment.zip \
          --region us-east-2 || \
        echo "⚠️ Lambda function may not exist yet. Create it manually first."

    - name: Test deployment
      run: |
        echo "🧪 Testing deployed Lambda function..."
        aws lambda invoke \
          --function-name summoner-aws-backend \
          --payload '{"httpMethod": "GET", "path": "/health"}' \
          --region us-east-2 \
          response.json || echo "Test failed - function may not be ready"
        
        if [ -f response.json ]; then
          echo "📋 Lambda response:"
          cat response.json
        fi