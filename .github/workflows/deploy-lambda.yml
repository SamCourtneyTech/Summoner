name: Deploy AWS Lambda

on:
  push:
    branches: [ main ]
    paths:
      - 'Backend/**'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  LAMBDA_FUNCTION_NAME: summoner-backend
  PYTHON_VERSION: '3.9'

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Backend

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install awscli boto3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Create deployment package
      run: |
        mkdir -p deployment-package
        pip install -r requirements.txt -t deployment-package/
        cp *.py deployment-package/
        
        # Clean up unnecessary files
        find deployment-package -name "*.pyc" -delete
        find deployment-package -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true

    - name: Create deployment ZIP
      run: |
        cd deployment-package
        zip -r ../lambda-deployment.zip .
        cd ..
        ls -la lambda-deployment.zip

    - name: Deploy to Lambda
      run: |
        aws lambda update-function-code \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --zip-file fileb://lambda-deployment.zip \
          --region ${{ env.AWS_REGION }} || \
        echo "Lambda function may not exist yet. Create it manually first."

    - name: Test deployment
      run: |
        echo "Testing Lambda function..."
        aws lambda invoke \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --payload '{"httpMethod": "GET", "path": "/"}' \
          --region ${{ env.AWS_REGION }} \
          response.json || echo "Test invocation failed"
        
        if [ -f response.json ]; then
          echo "Lambda response:"
          cat response.json
        fi